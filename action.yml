name: WordPress.org Text Replace
description: 'A helpful GitHub action that will handle replacing version numbers across plugin files.'

author: Scott Kingsley Clark <scott@skc.dev>

inputs:
  plugin_version:
    description: 'Plugin version'
    required: false
  plugin_version_constant_name:
    description: 'Plugin version constant name (if used)'
    required: false
  tested_wp_version:
    description: 'Tested up to WP version'
    required: false
  tested_wp_version_constant_name:
    description: 'Tested up to WP version constant name (if used)'
    required: false
  minimum_wp_version:
    description: 'Minimum WP version'
    required: false
  minimum_wp_version_constant_name:
    description: 'Minimum WP version constant name (if used)'
    required: false
  minimum_php_version:
    description: 'Minimum PHP version'
    required: false
  minimum_php_version_constant_name:
    description: 'Minimum PHP version constant name (if used)'
    required: false
  plugin_file:
    description: 'Plugin file'
    required: false

outputs:
  changes_made:
    description: Value is "true", if the repository changes were made from the replacement. Value is "false", if no changes were made.

branding:
  icon: 'save'
  color: green

runs:
  using: "composite"
  steps:
    - name: Set up Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '14.20.1'
    - name: Get NPM cache directory to use
      id: npm-cache-dir
      shell: bash
      run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
    - name: Setup NPM cache
      uses: actions/cache@v3
      id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
      with:
        path: ${{ steps.npm-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Install NPM wporg-replace-helper package
      run: npm install https://github.com/sc0ttkclark/wporg-replace-helper
    - name: Update plugin version
      if: "${{ inputs.plugin_version != '' }}"
      run: npm run update-version-number --plugin_version="${{ inputs.plugin_version }}" --plugin_version_constant_name="${{ inputs.plugin_version_constant_name }}" --plugin_file="${{ inputs.plugin_file }}"
    - name: Update tested WP version
      if: "${{ inputs.tested_wp_version != '' }}"
      run: npm run update-version-number --tested_wp="${{ inputs.tested_wp_version }}" --tested_wp_constant_name="${{ inputs.tested_wp_version_constant_name }}" --plugin_file="${{ inputs.plugin_file }}"
    - name: Update minimum WP version
      if: "${{ inputs.minimum_wp_version != '' }}"
      run: npm run update-version-number --minimum_wp="${{ inputs.minimum_wp_version }}" --minimum_wp_constant_name="${{ inputs.minimum_wp_version_constant_name }}" --plugin_file="${{ inputs.plugin_file }}"
    - name: Update minimum PHP version
      if: "${{ inputs.minimum_php_version != '' }}"
      run: npm run update-version-number --required_php="${{ inputs.minimum_php_version }}" --required_php_constant_name="${{ inputs.minimum_php_version_constant_name }}" --plugin_file="${{ inputs.plugin_file }}"
